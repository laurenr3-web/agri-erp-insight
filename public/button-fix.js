
// Script de r√©paration pour l'accessibilit√© et l'interactivit√© des boutons
(function() {
  console.log("üîß Script de r√©paration des boutons en cours d'ex√©cution...");
  
  // Fonction pour r√©parer tous les boutons
  function fixAllButtons() {
    // S√©lectionner tous les boutons sans attribut 'title'
    const buttons = document.querySelectorAll('button:not([title])');
    
    buttons.forEach(button => {
      // Ajouter un titre bas√© sur le texte du bouton ou un titre g√©n√©rique
      let buttonText = button.textContent?.trim() || "";
      if (buttonText === "" && button.querySelector("svg")) {
        // Si c'est un bouton avec uniquement une ic√¥ne
        const ariaLabel = button.getAttribute('aria-label');
        buttonText = ariaLabel || "Bouton avec ic√¥ne";
      }
      button.setAttribute('title', buttonText || "Bouton");
      
      // Fixer les probl√®mes d'accessibilit√©
      if (!button.getAttribute('aria-label') && buttonText) {
        button.setAttribute('aria-label', buttonText);
      }
    });
    
    // Rendre tous les √©l√©ments de formulaire s√©lectionnables
    const formElements = document.querySelectorAll('input, textarea, select');
    formElements.forEach(el => {
      el.classList.add('selectable-text');
    });
    
    // Ajout d'attributs pour am√©liorer l'accessibilit√© des √©l√©ments interactifs
    const interactiveElements = document.querySelectorAll('a, button, [role="button"], [role="tab"]');
    interactiveElements.forEach(el => {
      if (!el.getAttribute('tabindex')) {
        el.setAttribute('tabindex', '0');
      }
    });
    
    console.log(`‚úÖ Accessibilit√© am√©lior√©e: ${buttons.length} boutons r√©par√©s`);
  }
  
  // S'assurer que tous les clics fonctionnent correctement
  function improveClickEvents() {
    // Cibler les √©l√©ments probl√©matiques connus
    const elements = document.querySelectorAll('button, [role="button"], select, input[type="checkbox"], input[type="radio"]');
    
    elements.forEach(el => {
      // V√©rifier si l'√©l√©ment n'a pas d√©j√† √©t√© trait√©
      if (!el.hasAttribute('data-click-fixed')) {
        el.setAttribute('data-click-fixed', 'true');
        
        // Capturer les clics en phase de capture
        el.addEventListener('click', (e) => {
          // Emp√™cher la propagation du clic aux parents
          e.stopPropagation();
        }, true);
      }
    });
  }
  
  // Ex√©cuter au chargement initial
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', function() {
      fixAllButtons();
      improveClickEvents();
    });
  } else {
    fixAllButtons();
    improveClickEvents();
  }
  
  // R√©ex√©cuter p√©riodiquement pour les nouveaux √©l√©ments
  setInterval(fixAllButtons, 3000);
  setInterval(improveClickEvents, 3000);
})();

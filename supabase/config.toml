
# A string used to distinguish different Supabase projects on the same host. Defaults to the
# working directory name when running `supabase init`.
project_id = "cagmgtmeljxykyngxxmj"

[api]
enabled = true
# Port to use for the API URL.
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API
# endpoints. public and storage are always included.
schemas = ["public", "storage", "graphql_public"]
# Extra schemas to add to the search_path of every request. public is always included.
extra_search_path = ["public", "extensions"]
# The maximum number of rows returns from a view, table, or stored procedure. Limits payload size
# for accidental or malicious requests.
max_rows = 1000

[db]
# Port to use for the local database URL.
port = 54322
# Port used by db diff command to initialize the shadow database.
shadow_port = 54320
# The database major version to use. This has to be the same as your remote database's. Run `SHOW
# server_version;` on the remote database to check.
major_version = 15

[db.pooler]
enabled = false
# Port to use for the local connection pooler.
port = 54329
# The maximum number of connections the pooler will keep in reserve. Defaults to 10 connections.
pool_mode = "transaction"
# The number of connections to keep ready in case of a sudden flood of client connections. Defaults
# to 10 connections.
default_pool_size = 20
# The maximum number of connections. When the pool is at capacity, new clients will wait until a
# connection is available. Not usually needed. Defaults to 100 connections.
max_client_conn = 100

[realtime]
enabled = true
# The maximum number of bytes Realtime will receive in a single message. Defaults to 1048576 bytes
# (1 MiB).
max_message_size = 1048576

[studio]
enabled = true
# Port to use for Supabase Studio.
port = 54323
# External URL of the API server that frontend connects to.
api_url = "http://localhost"

# Email testing server. Emails sent with the local dev setup are not actually sent - rather, they
# are monitored, and you can view the emails that would have been sent from the web interface.
[inbucket]
enabled = true
# Port to use for the email testing server web interface.
port = 54324
# Uncomment to expose additional ports for testing user applications that send emails.
# smtp_port = 54325
# pop3_port = 54326

[storage]
enabled = true
# The maximum file size allowed (e.g. "5MB", "500KB").
file_size_limit = "50MiB"

[auth]
enabled = true
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used
# in emails.
site_url = "http://localhost:3000"
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.
additional_redirect_urls = ["https://localhost:3000"]
# How long tokens are valid for, in seconds. Defaults to 3600 (1 hour), maximum 604,800 (1 week).
jwt_expiry = 3600
# If disabled, the refresh token will never expire.
enable_refresh_token_rotation = true
# Allows refresh tokens to be reused after expiry, up to the specified interval in seconds.
# Defaults to 10 seconds.
refresh_token_reuse_interval = 10
# Allow/disallow new user signups to your project.
enable_signup = true

[auth.email]
# Allow/disallow new user signups via email to your project.
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old, and new email
# addresses. If disabled, only the new email is required to confirm.
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in.
enable_confirmations = false

# Configure one of the supported SMS providers: `twilio`, `messagebird`, `textlocal`, `vonage`.
[auth.sms]
enable_signup = true
enable_confirmations = true
# provider = ""
# Uncomment to use the 'phone_local' template instead of the 'phone' template.
# use_local_templates_for_phone = false

# Use pre-defined map of phone number to OTP for testing.
[auth.sms.test_otp]
# 1234567890 = "123456"

# Configure storage for user profile photos, etc.
[auth.user_metadata]
avatars_storage_bucket = "avatars"
avatars_path = "/avatars"
avatars_sizes = [ 100, 300, 500 ]

# Define which users get which roles on signup.
# You can add other roles and also define custom roles here.
[auth.hooks.custom_access_token]
default_role = "authenticated"
roles_query = "select 'authenticated'::text" # Override with your own query to dynamically assign roles on signup.


# Use a different S3 bucket for storage.
[secrets]
enabled = true

[analytics]
enabled = false
port = 54327
vector_port = 54328

# Configure your Edge Functions.
[functions]
enabled = true
port = 54324

[functions.notifications]
verify_jwt = true

[functions.erp-integration]
verify_jwt = false # Public API with API key auth

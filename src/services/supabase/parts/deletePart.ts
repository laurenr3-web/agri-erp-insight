
import { supabase } from '@/integrations/supabase/client';

/**
 * Supprime une pi√®ce de l'inventaire
 * 
 * @param partId L'identifiant de la pi√®ce √† supprimer
 * @returns Promise r√©solvant √† un bool√©en indiquant le succ√®s de l'op√©ration
 */
export async function deletePart(partId: number | string): Promise<boolean> {
  console.log("üóëÔ∏è Suppression de la pi√®ce ID:", partId);
  
  try {
    const { error } = await supabase
      .from('parts_inventory')
      .delete()
      .eq('id', partId);
    
    if (error) {
      console.error("‚ùå Erreur Supabase lors de la suppression:", error);
      
      // Messages d'erreur sp√©cifiques
      if (error.code === '42501') {
        throw new Error("Vous n'avez pas les permissions n√©cessaires pour supprimer cette pi√®ce");
      } else if (error.code === '23503') {
        throw new Error("Cette pi√®ce est utilis√©e ailleurs et ne peut pas √™tre supprim√©e");
      } else {
        throw new Error(`Erreur lors de la suppression: ${error.message || "Probl√®me inconnu"}`);
      }
    }
    
    console.log("‚úÖ Pi√®ce supprim√©e avec succ√®s");
    return true;
  } catch (err: any) {
    console.error("‚ùå Exception lors de la suppression de la pi√®ce:", err);
    throw err;
  }
}
